{"ast":null,"code":"import _objectSpread from\"D:/vscode/Tomasulo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,useCallback,useEffect}from'react';import{Box,Button,TextField,Typography,Grid,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Accordion,AccordionSummary,AccordionDetails,IconButton}from'@mui/material';import AddIcon from'@mui/icons-material/Add';import DeleteIcon from'@mui/icons-material/Delete';import{parseInstructions}from'../utils/instructionParser';import{TomasuloCore}from'../utils/tomasuloCore';/**\r\n * Default instruction sequence for demonstration\r\n * Shows various instruction types and their dependencies\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DEFAULT_INSTRUCTIONS=\"LD R1, 0\\nADD R2, R1, R1\\nMUL R3, R2, R2\\nSUB R4, R3, R2\\nDIV R5, R4, R1\";/**\r\n * Tomasulo Simulator Component\r\n * Main component for the Tomasulo algorithm simulator\r\n */const TomasuloSimulator=()=>{// State for instruction input and error handling\nconst[instructions,setInstructions]=useState('');const[error,setError]=useState('');const[updateTrigger,setUpdateTrigger]=useState(0);const[isExecuting,setIsExecuting]=useState(false);// Configuration state for simulator settings\nconst[config,setConfig]=useState({addUnits:3,// Number of ADD/SUB functional units\nmultUnits:2,// Number of MUL/DIV functional units\nloadUnits:2,// Number of LOAD functional units\nmemory:[// Initial memory contents\n{address:0,value:5},{address:1,value:10},{address:2,value:15}]});// Reference to the Tomasulo simulator instance\nconst simulatorRef=useRef(new TomasuloCore());/**\r\n   * Initialize simulator with current configuration\r\n   */const initializeSimulator=useCallback(()=>{simulatorRef.current=new TomasuloCore({addUnits:config.addUnits,multUnits:config.multUnits,loadUnits:config.loadUnits});simulatorRef.current.initializeMemory(config.memory);setUpdateTrigger(prev=>prev+1);},[config]);// Initialize simulator on component mount and config changes\nuseEffect(()=>{initializeSimulator();},[config]);/**\r\n   * Handle single step execution\r\n   * Loads instructions if needed and executes one cycle\r\n   */const handleStep=useCallback(()=>{try{// Load instructions if none are currently executing\nif(!isExecuting&&simulatorRef.current.instructionQueue.length===0){const instructionsToUse=instructions.trim()||DEFAULT_INSTRUCTIONS;if(!instructions.trim()){setInstructions(DEFAULT_INSTRUCTIONS);}const parsedInstructions=parseInstructions(instructionsToUse);simulatorRef.current.loadInstructions(parsedInstructions);setIsExecuting(true);}// Check if all instructions have completed\nif(isExecuting&&simulatorRef.current.instructionQueue.length===0&&!Object.values(simulatorRef.current.reservationStations).flat().some(station=>station.busy)){setError('All instructions have been executed.');setIsExecuting(false);return;}simulatorRef.current.step();setUpdateTrigger(prev=>prev+1);setError('');}catch(err){setError(err.message);setIsExecuting(false);}},[instructions,isExecuting]);/**\r\n   * Reset simulator to initial state\r\n   */const handleReset=useCallback(()=>{initializeSimulator();setError('');setIsExecuting(false);},[initializeSimulator]);/**\r\n   * Handle configuration changes\r\n   */const handleConfigChange=useCallback((field,value)=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));},[]);/**\r\n   * Handle memory content changes\r\n   */const handleMemoryChange=useCallback((index,field,value)=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{memory:prev.memory.map((item,i)=>i===index?_objectSpread(_objectSpread({},item),{},{[field]:parseInt(value)||0}):item)}));},[]);/**\r\n   * Add new memory entry\r\n   */const addMemoryEntry=useCallback(()=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{memory:[...prev.memory,{address:prev.memory.length,value:0}]}));},[]);/**\r\n   * Remove memory entry\r\n   */const removeMemoryEntry=useCallback(index=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{memory:prev.memory.filter((_,i)=>i!==index)}));},[]);/**\r\n   * Render configuration panel\r\n   */const renderConfigPanel=()=>/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Configuration\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"ADD/SUB Units\",value:config.addUnits,onChange:e=>handleConfigChange('addUnits',parseInt(e.target.value)||0),inputProps:{min:1,max:10}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"MUL/DIV Units\",value:config.multUnits,onChange:e=>handleConfigChange('multUnits',parseInt(e.target.value)||0),inputProps:{min:1,max:10}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"LOAD Units\",value:config.loadUnits,onChange:e=>handleConfigChange('loadUnits',parseInt(e.target.value)||0),inputProps:{min:1,max:10}})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Memory Configuration\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Address\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Value\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Action\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:config.memory.map((entry,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{type:\"number\",value:entry.address,onChange:e=>handleMemoryChange(index,'address',e.target.value),inputProps:{min:0}})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{type:\"number\",value:entry.value,onChange:e=>handleMemoryChange(index,'value',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",size:\"small\",onClick:()=>removeMemoryEntry(index),children:\"Delete\"})})]},index))})]})}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:addMemoryEntry,sx:{mt:1},children:\"Add Memory Entry\"})]})]});/**\r\n   * Render reservation stations table\r\n   */const renderReservationStations=useCallback(()=>{const stations=simulatorRef.current.reservationStations;return/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"FU\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Busy\"}),/*#__PURE__*/_jsx(TableCell,{children:\"OP\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Vj\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Vk\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Qj\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Qk\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Dest\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Remaining Cycles\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:Object.entries(stations).map(_ref=>{let[type,stationList]=_ref;return stationList.map((station,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:station.name}),/*#__PURE__*/_jsx(TableCell,{children:station.busy?'Yes':'No'}),/*#__PURE__*/_jsx(TableCell,{children:station.op||'-'}),/*#__PURE__*/_jsx(TableCell,{children:station.vj!==null?station.vj:'-'}),/*#__PURE__*/_jsx(TableCell,{children:station.vk!==null?station.vk:'-'}),/*#__PURE__*/_jsx(TableCell,{children:station.qj||'-'}),/*#__PURE__*/_jsx(TableCell,{children:station.qk||'-'}),/*#__PURE__*/_jsx(TableCell,{children:station.dest||'-'}),/*#__PURE__*/_jsx(TableCell,{children:station.remainingCycles||'-'})]},\"\".concat(type,\"-\").concat(index)));})})]})});},[updateTrigger]);/**\r\n   * Render registers table\r\n   */const renderRegisters=useCallback(()=>{const registers=simulatorRef.current.registers;return/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Register\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Value\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Qi\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:registers.map((reg,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsxs(TableCell,{children:[\"R\",index]}),/*#__PURE__*/_jsx(TableCell,{children:reg.value}),/*#__PURE__*/_jsx(TableCell,{children:reg.qi||'-'})]},index))})]})});},[updateTrigger]);/**\r\n   * Render memory contents table\r\n   */const renderMemory=useCallback(()=>{const memoryContents=simulatorRef.current.getMemoryContents();return/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Address\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Value\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:memoryContents.map(_ref2=>{let{address,value}=_ref2;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:address}),/*#__PURE__*/_jsx(TableCell,{children:value})]},address);})})]})});},[updateTrigger]);/**\r\n   * Render instruction help table\r\n   */const renderInstructionHelp=()=>/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Supported Instructions:\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Instruction\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Format\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Description\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Latency\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"LD\"}),/*#__PURE__*/_jsx(TableCell,{children:\"LD Rd, offset\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Load from memory\"}),/*#__PURE__*/_jsx(TableCell,{children:\"2 cycles\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"ADD\"}),/*#__PURE__*/_jsx(TableCell,{children:\"ADD Rd, Rs, Rt\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Add two registers\"}),/*#__PURE__*/_jsx(TableCell,{children:\"2 cycles\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"SUB\"}),/*#__PURE__*/_jsx(TableCell,{children:\"SUB Rd, Rs, Rt\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Subtract two registers\"}),/*#__PURE__*/_jsx(TableCell,{children:\"2 cycles\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"MUL\"}),/*#__PURE__*/_jsx(TableCell,{children:\"MUL Rd, Rs, Rt\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Multiply two registers\"}),/*#__PURE__*/_jsx(TableCell,{children:\"10 cycles\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"DIV\"}),/*#__PURE__*/_jsx(TableCell,{children:\"DIV Rd, Rs, Rt\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Divide two registers\"}),/*#__PURE__*/_jsx(TableCell,{children:\"40 cycles\"})]})]})]})})]});return/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:4,label:\"Input Instructions\",value:instructions,onChange:e=>setInstructions(e.target.value),placeholder:DEFAULT_INSTRUCTIONS,error:!!error,helperText:error})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleStep,children:\"Step\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleReset,children:\"Reset\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Current Cycle: \",simulatorRef.current.currentCycle]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Configuration\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:renderConfigPanel()})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Accordion,{defaultExpanded:true,children:[/*#__PURE__*/_jsx(AccordionSummary,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Reservation Stations\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:renderReservationStations()})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Register Status\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:renderRegisters()})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Memory Contents\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:renderMemory()})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Instruction Help\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:renderInstructionHelp()})]})})]})});};export default TomasuloSimulator;","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","Box","Button","TextField","Typography","Grid","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Accordion","AccordionSummary","AccordionDetails","IconButton","AddIcon","DeleteIcon","parseInstructions","TomasuloCore","jsx","_jsx","jsxs","_jsxs","DEFAULT_INSTRUCTIONS","TomasuloSimulator","instructions","setInstructions","error","setError","updateTrigger","setUpdateTrigger","isExecuting","setIsExecuting","config","setConfig","addUnits","multUnits","loadUnits","memory","address","value","simulatorRef","initializeSimulator","current","initializeMemory","prev","handleStep","instructionQueue","length","instructionsToUse","trim","parsedInstructions","loadInstructions","Object","values","reservationStations","flat","some","station","busy","step","err","message","handleReset","handleConfigChange","field","_objectSpread","handleMemoryChange","index","map","item","i","parseInt","addMemoryEntry","removeMemoryEntry","filter","_","renderConfigPanel","sx","mt","children","variant","gutterBottom","container","spacing","xs","md","fullWidth","type","label","onChange","e","target","inputProps","min","max","component","size","entry","color","onClick","renderReservationStations","stations","entries","_ref","stationList","name","op","vj","vk","qj","qk","dest","remainingCycles","concat","renderRegisters","registers","reg","qi","renderMemory","memoryContents","getMemoryContents","_ref2","renderInstructionHelp","multiline","rows","placeholder","helperText","display","gap","currentCycle","defaultExpanded"],"sources":["D:/vscode/Tomasulo/src/components/TomasuloSimulator.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { Box, Button, TextField, Typography, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Accordion, AccordionSummary, AccordionDetails, IconButton } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { parseInstructions } from '../utils/instructionParser';\r\nimport { TomasuloCore } from '../utils/tomasuloCore';\r\n\r\n/**\r\n * Default instruction sequence for demonstration\r\n * Shows various instruction types and their dependencies\r\n */\r\nconst DEFAULT_INSTRUCTIONS = `LD R1, 0\r\nADD R2, R1, R1\r\nMUL R3, R2, R2\r\nSUB R4, R3, R2\r\nDIV R5, R4, R1`;\r\n\r\n/**\r\n * Tomasulo Simulator Component\r\n * Main component for the Tomasulo algorithm simulator\r\n */\r\nconst TomasuloSimulator = () => {\r\n  // State for instruction input and error handling\r\n  const [instructions, setInstructions] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [isExecuting, setIsExecuting] = useState(false);\r\n\r\n  // Configuration state for simulator settings\r\n  const [config, setConfig] = useState({\r\n    addUnits: 3,      // Number of ADD/SUB functional units\r\n    multUnits: 2,     // Number of MUL/DIV functional units\r\n    loadUnits: 2,     // Number of LOAD functional units\r\n    memory: [         // Initial memory contents\r\n      { address: 0, value: 5 },\r\n      { address: 1, value: 10 },\r\n      { address: 2, value: 15 }\r\n    ]\r\n  });\r\n\r\n  // Reference to the Tomasulo simulator instance\r\n  const simulatorRef = useRef(new TomasuloCore());\r\n\r\n  /**\r\n   * Initialize simulator with current configuration\r\n   */\r\n  const initializeSimulator = useCallback(() => {\r\n    simulatorRef.current = new TomasuloCore({\r\n      addUnits: config.addUnits,\r\n      multUnits: config.multUnits,\r\n      loadUnits: config.loadUnits\r\n    });\r\n    simulatorRef.current.initializeMemory(config.memory);\r\n    setUpdateTrigger(prev => prev + 1);\r\n  }, [config]);\r\n\r\n  // Initialize simulator on component mount and config changes\r\n  useEffect(() => {\r\n    initializeSimulator();\r\n  }, [config]);\r\n\r\n  /**\r\n   * Handle single step execution\r\n   * Loads instructions if needed and executes one cycle\r\n   */\r\n  const handleStep = useCallback(() => {\r\n    try {\r\n      // Load instructions if none are currently executing\r\n      if (!isExecuting && simulatorRef.current.instructionQueue.length === 0) {\r\n        const instructionsToUse = instructions.trim() || DEFAULT_INSTRUCTIONS;\r\n        if (!instructions.trim()) {\r\n          setInstructions(DEFAULT_INSTRUCTIONS);\r\n        }\r\n        const parsedInstructions = parseInstructions(instructionsToUse);\r\n        simulatorRef.current.loadInstructions(parsedInstructions);\r\n        setIsExecuting(true);\r\n      }\r\n\r\n      // Check if all instructions have completed\r\n      if (isExecuting && \r\n          simulatorRef.current.instructionQueue.length === 0 && \r\n          !Object.values(simulatorRef.current.reservationStations).flat().some(station => station.busy)) {\r\n        setError('All instructions have been executed.');\r\n        setIsExecuting(false);\r\n        return;\r\n      }\r\n\r\n      simulatorRef.current.step();\r\n      setUpdateTrigger(prev => prev + 1);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsExecuting(false);\r\n    }\r\n  }, [instructions, isExecuting]);\r\n\r\n  /**\r\n   * Reset simulator to initial state\r\n   */\r\n  const handleReset = useCallback(() => {\r\n    initializeSimulator();\r\n    setError('');\r\n    setIsExecuting(false);\r\n  }, [initializeSimulator]);\r\n\r\n  /**\r\n   * Handle configuration changes\r\n   */\r\n  const handleConfigChange = useCallback((field, value) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  }, []);\r\n\r\n  /**\r\n   * Handle memory content changes\r\n   */\r\n  const handleMemoryChange = useCallback((index, field, value) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      memory: prev.memory.map((item, i) => \r\n        i === index ? { ...item, [field]: parseInt(value) || 0 } : item\r\n      )\r\n    }));\r\n  }, []);\r\n\r\n  /**\r\n   * Add new memory entry\r\n   */\r\n  const addMemoryEntry = useCallback(() => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      memory: [...prev.memory, { address: prev.memory.length, value: 0 }]\r\n    }));\r\n  }, []);\r\n\r\n  /**\r\n   * Remove memory entry\r\n   */\r\n  const removeMemoryEntry = useCallback((index) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      memory: prev.memory.filter((_, i) => i !== index)\r\n    }));\r\n  }, []);\r\n\r\n  /**\r\n   * Render configuration panel\r\n   */\r\n  const renderConfigPanel = () => (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>Configuration</Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"ADD/SUB Units\"\r\n            value={config.addUnits}\r\n            onChange={(e) => handleConfigChange('addUnits', parseInt(e.target.value) || 0)}\r\n            inputProps={{ min: 1, max: 10 }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"MUL/DIV Units\"\r\n            value={config.multUnits}\r\n            onChange={(e) => handleConfigChange('multUnits', parseInt(e.target.value) || 0)}\r\n            inputProps={{ min: 1, max: 10 }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"LOAD Units\"\r\n            value={config.loadUnits}\r\n            onChange={(e) => handleConfigChange('loadUnits', parseInt(e.target.value) || 0)}\r\n            inputProps={{ min: 1, max: 10 }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Memory Configuration</Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Address</TableCell>\r\n                <TableCell>Value</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {config.memory.map((entry, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      value={entry.address}\r\n                      onChange={(e) => handleMemoryChange(index, 'address', e.target.value)}\r\n                      inputProps={{ min: 0 }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      value={entry.value}\r\n                      onChange={(e) => handleMemoryChange(index, 'value', e.target.value)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"error\"\r\n                      size=\"small\"\r\n                      onClick={() => removeMemoryEntry(index)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={addMemoryEntry}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          Add Memory Entry\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  /**\r\n   * Render reservation stations table\r\n   */\r\n  const renderReservationStations = useCallback(() => {\r\n    const stations = simulatorRef.current.reservationStations;\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>FU</TableCell>\r\n              <TableCell>Busy</TableCell>\r\n              <TableCell>OP</TableCell>\r\n              <TableCell>Vj</TableCell>\r\n              <TableCell>Vk</TableCell>\r\n              <TableCell>Qj</TableCell>\r\n              <TableCell>Qk</TableCell>\r\n              <TableCell>Dest</TableCell>\r\n              <TableCell>Remaining Cycles</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.entries(stations).map(([type, stationList]) => (\r\n              stationList.map((station, index) => (\r\n                <TableRow key={`${type}-${index}`}>\r\n                  <TableCell>{station.name}</TableCell>\r\n                  <TableCell>{station.busy ? 'Yes' : 'No'}</TableCell>\r\n                  <TableCell>{station.op || '-'}</TableCell>\r\n                  <TableCell>{station.vj !== null ? station.vj : '-'}</TableCell>\r\n                  <TableCell>{station.vk !== null ? station.vk : '-'}</TableCell>\r\n                  <TableCell>{station.qj || '-'}</TableCell>\r\n                  <TableCell>{station.qk || '-'}</TableCell>\r\n                  <TableCell>{station.dest || '-'}</TableCell>\r\n                  <TableCell>{station.remainingCycles || '-'}</TableCell>\r\n                </TableRow>\r\n              ))\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }, [updateTrigger]);\r\n\r\n  /**\r\n   * Render registers table\r\n   */\r\n  const renderRegisters = useCallback(() => {\r\n    const registers = simulatorRef.current.registers;\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Register</TableCell>\r\n              <TableCell>Value</TableCell>\r\n              <TableCell>Qi</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {registers.map((reg, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>R{index}</TableCell>\r\n                <TableCell>{reg.value}</TableCell>\r\n                <TableCell>{reg.qi || '-'}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }, [updateTrigger]);\r\n\r\n  /**\r\n   * Render memory contents table\r\n   */\r\n  const renderMemory = useCallback(() => {\r\n    const memoryContents = simulatorRef.current.getMemoryContents();\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Address</TableCell>\r\n              <TableCell>Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {memoryContents.map(({ address, value }) => (\r\n              <TableRow key={address}>\r\n                <TableCell>{address}</TableCell>\r\n                <TableCell>{value}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }, [updateTrigger]);\r\n\r\n  /**\r\n   * Render instruction help table\r\n   */\r\n  const renderInstructionHelp = () => (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>Supported Instructions:</Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Instruction</TableCell>\r\n              <TableCell>Format</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Latency</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>LD</TableCell>\r\n              <TableCell>LD Rd, offset</TableCell>\r\n              <TableCell>Load from memory</TableCell>\r\n              <TableCell>2 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ADD</TableCell>\r\n              <TableCell>ADD Rd, Rs, Rt</TableCell>\r\n              <TableCell>Add two registers</TableCell>\r\n              <TableCell>2 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>SUB</TableCell>\r\n              <TableCell>SUB Rd, Rs, Rt</TableCell>\r\n              <TableCell>Subtract two registers</TableCell>\r\n              <TableCell>2 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>MUL</TableCell>\r\n              <TableCell>MUL Rd, Rs, Rt</TableCell>\r\n              <TableCell>Multiply two registers</TableCell>\r\n              <TableCell>10 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>DIV</TableCell>\r\n              <TableCell>DIV Rd, Rs, Rt</TableCell>\r\n              <TableCell>Divide two registers</TableCell>\r\n              <TableCell>40 cycles</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            label=\"Input Instructions\"\r\n            value={instructions}\r\n            onChange={(e) => setInstructions(e.target.value)}\r\n            placeholder={DEFAULT_INSTRUCTIONS}\r\n            error={!!error}\r\n            helperText={error}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            <Button variant=\"contained\" onClick={handleStep}>\r\n              Step\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\">Current Cycle: {simulatorRef.current.currentCycle}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Configuration</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderConfigPanel()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion defaultExpanded>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Reservation Stations</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderReservationStations()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Register Status</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderRegisters()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Memory Contents</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderMemory()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Instruction Help</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderInstructionHelp()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TomasuloSimulator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}