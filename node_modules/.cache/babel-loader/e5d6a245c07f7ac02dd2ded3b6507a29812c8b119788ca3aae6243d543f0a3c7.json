{"ast":null,"code":"var _jsxFileName = \"D:\\\\vscode\\\\Tomasulo\\\\src\\\\components\\\\TomasuloSimulator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { Box, Button, TextField, Typography, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Accordion, AccordionSummary, AccordionDetails, IconButton } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { parseInstructions } from '../utils/instructionParser';\nimport { TomasuloCore } from '../utils/tomasuloCore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_INSTRUCTIONS = `LD R1, 0\nADD R2, R1, R1\nMUL R3, R2, R2\nSUB R4, R3, R2\nDIV R5, R4, R1`;\nconst TomasuloSimulator = () => {\n  _s();\n  const [instructions, setInstructions] = useState('');\n  const [error, setError] = useState('');\n  const [updateTrigger, setUpdateTrigger] = useState(0);\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [config, setConfig] = useState({\n    addUnits: 3,\n    multUnits: 2,\n    loadUnits: 2,\n    memory: [{\n      address: 0,\n      value: 5\n    }, {\n      address: 1,\n      value: 10\n    }, {\n      address: 2,\n      value: 15\n    }]\n  });\n  const simulatorRef = useRef(new TomasuloCore());\n\n  // 初始化模拟器\n  useEffect(() => {\n    initializeSimulator();\n  }, [config]);\n  const initializeSimulator = useCallback(() => {\n    simulatorRef.current = new TomasuloCore({\n      addUnits: config.addUnits,\n      multUnits: config.multUnits,\n      loadUnits: config.loadUnits\n    });\n    simulatorRef.current.initializeMemory(config.memory);\n    setUpdateTrigger(prev => prev + 1);\n  }, [config]);\n  const handleStep = useCallback(() => {\n    try {\n      if (!isExecuting && simulatorRef.current.instructionQueue.length === 0) {\n        const instructionsToUse = instructions.trim() || DEFAULT_INSTRUCTIONS;\n        if (!instructions.trim()) {\n          setInstructions(DEFAULT_INSTRUCTIONS);\n        }\n        const parsedInstructions = parseInstructions(instructionsToUse);\n        simulatorRef.current.loadInstructions(parsedInstructions);\n        setIsExecuting(true);\n      }\n      if (isExecuting && simulatorRef.current.instructionQueue.length === 0 && !Object.values(simulatorRef.current.reservationStations).flat().some(station => station.busy)) {\n        setError('All instructions have been executed.');\n        setIsExecuting(false);\n        return;\n      }\n      simulatorRef.current.step();\n      setUpdateTrigger(prev => prev + 1);\n      setError('');\n    } catch (err) {\n      setError(err.message);\n      setIsExecuting(false);\n    }\n  }, [instructions, isExecuting]);\n  const handleReset = useCallback(() => {\n    initializeSimulator();\n    setError('');\n    setIsExecuting(false);\n  }, [initializeSimulator]);\n  const handleConfigChange = useCallback((field, value) => {\n    setConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n  const handleMemoryChange = useCallback((index, field, value) => {\n    setConfig(prev => ({\n      ...prev,\n      memory: prev.memory.map((item, i) => i === index ? {\n        ...item,\n        [field]: parseInt(value) || 0\n      } : item)\n    }));\n  }, []);\n  const addMemoryEntry = useCallback(() => {\n    setConfig(prev => ({\n      ...prev,\n      memory: [...prev.memory, {\n        address: prev.memory.length,\n        value: 0\n      }]\n    }));\n  }, []);\n  const removeMemoryEntry = useCallback(index => {\n    setConfig(prev => ({\n      ...prev,\n      memory: prev.memory.filter((_, i) => i !== index)\n    }));\n  }, []);\n  const renderConfigPanel = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          label: \"ADD/SUB Units\",\n          value: config.addUnits,\n          onChange: e => handleConfigChange('addUnits', parseInt(e.target.value) || 0),\n          inputProps: {\n            min: 1,\n            max: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          label: \"MUL/DIV Units\",\n          value: config.multUnits,\n          onChange: e => handleConfigChange('multUnits', parseInt(e.target.value) || 0),\n          inputProps: {\n            min: 1,\n            max: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          label: \"LOAD Units\",\n          value: config.loadUnits,\n          onChange: e => handleConfigChange('loadUnits', parseInt(e.target.value) || 0),\n          inputProps: {\n            min: 1,\n            max: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Memory Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: config.memory.map((entry, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  value: entry.address,\n                  onChange: e => handleMemoryChange(index, 'address', e.target.value),\n                  inputProps: {\n                    min: 0\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  value: entry.value,\n                  onChange: e => handleMemoryChange(index, 'value', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => removeMemoryEntry(index),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 22\n        }, this),\n        onClick: addMemoryEntry,\n        sx: {\n          mt: 1\n        },\n        children: \"Add Memory Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n  const renderReservationStations = useCallback(() => {\n    const stations = simulatorRef.current.reservationStations;\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"FU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Busy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"OP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Vj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Vk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Qj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Qk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Dest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Remaining Cycles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: Object.entries(stations).map(([type, stationList]) => stationList.map((station, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.busy ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.op || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.vj !== null ? station.vj : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.vk !== null ? station.vk : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.qj || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.qk || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.dest || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: station.remainingCycles || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)]\n          }, `${type}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }, [updateTrigger]);\n  const renderRegisters = useCallback(() => {\n    const registers = simulatorRef.current.registers;\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Qi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: registers.map((reg, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"R\", index]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: reg.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: reg.qi || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }, [updateTrigger]);\n  const renderMemory = useCallback(() => {\n    const memoryContents = simulatorRef.current.getMemoryContents();\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: memoryContents.map(({\n            address,\n            value\n          }) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, address, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }, [updateTrigger]);\n  const renderInstructionHelp = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Supported Instructions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Instruction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Latency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"LD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"LD Rd, offset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Load from memory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"2 cycles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ADD Rd, Rs, Rt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Add two registers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"2 cycles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"SUB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"SUB Rd, Rs, Rt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Subtract two registers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"2 cycles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"MUL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"MUL Rd, Rs, Rt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Multiply two registers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"10 cycles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"DIV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"DIV Rd, Rs, Rt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Divide two registers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"40 cycles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          label: \"Input Instructions\",\n          value: instructions,\n          onChange: e => setInstructions(e.target.value),\n          placeholder: DEFAULT_INSTRUCTIONS,\n          error: !!error,\n          helperText: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleStep,\n            children: \"Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Current Cycle: \", simulatorRef.current.currentCycle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: renderConfigPanel()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultExpanded: true,\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Reservation Stations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: renderReservationStations()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Register Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: renderRegisters()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Memory Contents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: renderMemory()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Instruction Help\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: renderInstructionHelp()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(TomasuloSimulator, \"kOS4EAFe+IDrvrhEYxbXSPWOztk=\");\n_c = TomasuloSimulator;\nexport default TomasuloSimulator;\nvar _c;\n$RefreshReg$(_c, \"TomasuloSimulator\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","Box","Button","TextField","Typography","Grid","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Accordion","AccordionSummary","AccordionDetails","IconButton","AddIcon","DeleteIcon","parseInstructions","TomasuloCore","jsxDEV","_jsxDEV","DEFAULT_INSTRUCTIONS","TomasuloSimulator","_s","instructions","setInstructions","error","setError","updateTrigger","setUpdateTrigger","isExecuting","setIsExecuting","config","setConfig","addUnits","multUnits","loadUnits","memory","address","value","simulatorRef","initializeSimulator","current","initializeMemory","prev","handleStep","instructionQueue","length","instructionsToUse","trim","parsedInstructions","loadInstructions","Object","values","reservationStations","flat","some","station","busy","step","err","message","handleReset","handleConfigChange","field","handleMemoryChange","index","map","item","i","parseInt","addMemoryEntry","removeMemoryEntry","filter","_","renderConfigPanel","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","xs","md","fullWidth","type","label","onChange","e","target","inputProps","min","max","component","size","entry","onClick","startIcon","renderReservationStations","stations","entries","stationList","name","op","vj","vk","qj","qk","dest","remainingCycles","renderRegisters","registers","reg","qi","renderMemory","memoryContents","getMemoryContents","renderInstructionHelp","multiline","rows","placeholder","helperText","display","gap","currentCycle","defaultExpanded","_c","$RefreshReg$"],"sources":["D:/vscode/Tomasulo/src/components/TomasuloSimulator.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { Box, Button, TextField, Typography, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Accordion, AccordionSummary, AccordionDetails, IconButton } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { parseInstructions } from '../utils/instructionParser';\r\nimport { TomasuloCore } from '../utils/tomasuloCore';\r\n\r\nconst DEFAULT_INSTRUCTIONS = `LD R1, 0\r\nADD R2, R1, R1\r\nMUL R3, R2, R2\r\nSUB R4, R3, R2\r\nDIV R5, R4, R1`;\r\n\r\nconst TomasuloSimulator = () => {\r\n  const [instructions, setInstructions] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [isExecuting, setIsExecuting] = useState(false);\r\n  const [config, setConfig] = useState({\r\n    addUnits: 3,\r\n    multUnits: 2,\r\n    loadUnits: 2,\r\n    memory: [\r\n      { address: 0, value: 5 },\r\n      { address: 1, value: 10 },\r\n      { address: 2, value: 15 }\r\n    ]\r\n  });\r\n  const simulatorRef = useRef(new TomasuloCore());\r\n\r\n  // 初始化模拟器\r\n  useEffect(() => {\r\n    initializeSimulator();\r\n  }, [config]);\r\n\r\n  const initializeSimulator = useCallback(() => {\r\n    simulatorRef.current = new TomasuloCore({\r\n      addUnits: config.addUnits,\r\n      multUnits: config.multUnits,\r\n      loadUnits: config.loadUnits\r\n    });\r\n    simulatorRef.current.initializeMemory(config.memory);\r\n    setUpdateTrigger(prev => prev + 1);\r\n  }, [config]);\r\n\r\n  const handleStep = useCallback(() => {\r\n    try {\r\n      if (!isExecuting && simulatorRef.current.instructionQueue.length === 0) {\r\n        const instructionsToUse = instructions.trim() || DEFAULT_INSTRUCTIONS;\r\n        if (!instructions.trim()) {\r\n          setInstructions(DEFAULT_INSTRUCTIONS);\r\n        }\r\n        const parsedInstructions = parseInstructions(instructionsToUse);\r\n        simulatorRef.current.loadInstructions(parsedInstructions);\r\n        setIsExecuting(true);\r\n      }\r\n\r\n      if (isExecuting && \r\n          simulatorRef.current.instructionQueue.length === 0 && \r\n          !Object.values(simulatorRef.current.reservationStations).flat().some(station => station.busy)) {\r\n        setError('All instructions have been executed.');\r\n        setIsExecuting(false);\r\n        return;\r\n      }\r\n\r\n      simulatorRef.current.step();\r\n      setUpdateTrigger(prev => prev + 1);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsExecuting(false);\r\n    }\r\n  }, [instructions, isExecuting]);\r\n\r\n  const handleReset = useCallback(() => {\r\n    initializeSimulator();\r\n    setError('');\r\n    setIsExecuting(false);\r\n  }, [initializeSimulator]);\r\n\r\n  const handleConfigChange = useCallback((field, value) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  }, []);\r\n\r\n  const handleMemoryChange = useCallback((index, field, value) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      memory: prev.memory.map((item, i) => \r\n        i === index ? { ...item, [field]: parseInt(value) || 0 } : item\r\n      )\r\n    }));\r\n  }, []);\r\n\r\n  const addMemoryEntry = useCallback(() => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      memory: [...prev.memory, { address: prev.memory.length, value: 0 }]\r\n    }));\r\n  }, []);\r\n\r\n  const removeMemoryEntry = useCallback((index) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      memory: prev.memory.filter((_, i) => i !== index)\r\n    }));\r\n  }, []);\r\n\r\n  const renderConfigPanel = () => (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>Configuration</Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"ADD/SUB Units\"\r\n            value={config.addUnits}\r\n            onChange={(e) => handleConfigChange('addUnits', parseInt(e.target.value) || 0)}\r\n            inputProps={{ min: 1, max: 10 }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"MUL/DIV Units\"\r\n            value={config.multUnits}\r\n            onChange={(e) => handleConfigChange('multUnits', parseInt(e.target.value) || 0)}\r\n            inputProps={{ min: 1, max: 10 }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"LOAD Units\"\r\n            value={config.loadUnits}\r\n            onChange={(e) => handleConfigChange('loadUnits', parseInt(e.target.value) || 0)}\r\n            inputProps={{ min: 1, max: 10 }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Memory Configuration</Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Address</TableCell>\r\n                <TableCell>Value</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {config.memory.map((entry, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      value={entry.address}\r\n                      onChange={(e) => handleMemoryChange(index, 'address', e.target.value)}\r\n                      inputProps={{ min: 0 }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      value={entry.value}\r\n                      onChange={(e) => handleMemoryChange(index, 'value', e.target.value)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton onClick={() => removeMemoryEntry(index)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Button\r\n          startIcon={<AddIcon />}\r\n          onClick={addMemoryEntry}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          Add Memory Entry\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const renderReservationStations = useCallback(() => {\r\n    const stations = simulatorRef.current.reservationStations;\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>FU</TableCell>\r\n              <TableCell>Busy</TableCell>\r\n              <TableCell>OP</TableCell>\r\n              <TableCell>Vj</TableCell>\r\n              <TableCell>Vk</TableCell>\r\n              <TableCell>Qj</TableCell>\r\n              <TableCell>Qk</TableCell>\r\n              <TableCell>Dest</TableCell>\r\n              <TableCell>Remaining Cycles</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.entries(stations).map(([type, stationList]) => (\r\n              stationList.map((station, index) => (\r\n                <TableRow key={`${type}-${index}`}>\r\n                  <TableCell>{station.name}</TableCell>\r\n                  <TableCell>{station.busy ? 'Yes' : 'No'}</TableCell>\r\n                  <TableCell>{station.op || '-'}</TableCell>\r\n                  <TableCell>{station.vj !== null ? station.vj : '-'}</TableCell>\r\n                  <TableCell>{station.vk !== null ? station.vk : '-'}</TableCell>\r\n                  <TableCell>{station.qj || '-'}</TableCell>\r\n                  <TableCell>{station.qk || '-'}</TableCell>\r\n                  <TableCell>{station.dest || '-'}</TableCell>\r\n                  <TableCell>{station.remainingCycles || '-'}</TableCell>\r\n                </TableRow>\r\n              ))\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }, [updateTrigger]);\r\n\r\n  const renderRegisters = useCallback(() => {\r\n    const registers = simulatorRef.current.registers;\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Register</TableCell>\r\n              <TableCell>Value</TableCell>\r\n              <TableCell>Qi</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {registers.map((reg, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>R{index}</TableCell>\r\n                <TableCell>{reg.value}</TableCell>\r\n                <TableCell>{reg.qi || '-'}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }, [updateTrigger]);\r\n\r\n  const renderMemory = useCallback(() => {\r\n    const memoryContents = simulatorRef.current.getMemoryContents();\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Address</TableCell>\r\n              <TableCell>Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {memoryContents.map(({ address, value }) => (\r\n              <TableRow key={address}>\r\n                <TableCell>{address}</TableCell>\r\n                <TableCell>{value}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }, [updateTrigger]);\r\n\r\n  const renderInstructionHelp = () => (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>Supported Instructions:</Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Instruction</TableCell>\r\n              <TableCell>Format</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Latency</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>LD</TableCell>\r\n              <TableCell>LD Rd, offset</TableCell>\r\n              <TableCell>Load from memory</TableCell>\r\n              <TableCell>2 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ADD</TableCell>\r\n              <TableCell>ADD Rd, Rs, Rt</TableCell>\r\n              <TableCell>Add two registers</TableCell>\r\n              <TableCell>2 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>SUB</TableCell>\r\n              <TableCell>SUB Rd, Rs, Rt</TableCell>\r\n              <TableCell>Subtract two registers</TableCell>\r\n              <TableCell>2 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>MUL</TableCell>\r\n              <TableCell>MUL Rd, Rs, Rt</TableCell>\r\n              <TableCell>Multiply two registers</TableCell>\r\n              <TableCell>10 cycles</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>DIV</TableCell>\r\n              <TableCell>DIV Rd, Rs, Rt</TableCell>\r\n              <TableCell>Divide two registers</TableCell>\r\n              <TableCell>40 cycles</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            label=\"Input Instructions\"\r\n            value={instructions}\r\n            onChange={(e) => setInstructions(e.target.value)}\r\n            placeholder={DEFAULT_INSTRUCTIONS}\r\n            error={!!error}\r\n            helperText={error}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            <Button variant=\"contained\" onClick={handleStep}>\r\n              Step\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\">Current Cycle: {simulatorRef.current.currentCycle}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Configuration</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderConfigPanel()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion defaultExpanded>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Reservation Stations</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderReservationStations()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Register Status</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderRegisters()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Memory Contents</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderMemory()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <Typography variant=\"h6\">Instruction Help</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {renderInstructionHelp()}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TomasuloSimulator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}